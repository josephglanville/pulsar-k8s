kaap:
  cluster:
    create: true
    spec:
      global:
        name: pulsar
        image: datastax/lunastreaming-all:3.1_4.5
        restartOnConfigMapChange: true
        antiAffinity:
          host:
            enabled: false
            required: false
          zone:
            enabled: false
            required: false
        auth:
          enabled: true
        tls:
          enabled: true
          zookeeper:
            enabled: true
            secretName: zk-tls
          bookkeeper:
            enabled: true
            secretName: bk-tls
          autorecovery:
            enabled: true
            secretName: autorecovery-tls
          proxy:
            enabled: true
            enabledWithBroker: true
            secretName: proxy-tls
          broker:
            enabled: true
            secretName: broker-tls
          functionsWorker:
            enabled: true
            enabledWithBroker: true
            secretName: fnw-tls
          certProvisioner:
            selfSigned:
              enabled: true
              perComponent: true
              zookeeper:
                generate: true
              broker:
                generate: true
              bookkeeper:
                generate: true
              autorecovery:
                generate: true
              proxy:
                generate: true
              functionsWorker:
                generate: true
      zookeeper:
        replicas: 1
        dataVolume:
          name: data
          size: 100M
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
        config:
          ssl.protocol: TLSv1.3
          ssl.quorum.protocol: TLSv1.3
          ssl.enabledProtocols: TLSv1.3,TLSv1.2
      bookkeeper:
        replicas: 1
        volumes:
          journal:
            size: 1Gi
          ledgers:
            size: 1Gi
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      broker:
        replicas: 1
        kafka:
          enabled: true
        config:
          enablePackagesManagement: "true"
          managedLedgerDefaultAckQuorum: "1"
          managedLedgerDefaultEnsembleSize: "1"
          managedLedgerDefaultWriteQuorum: "1"
          packagesManagementLedgerRootPath: /ledgers
          packagesManagementStorageProvider: org.apache.pulsar.packages.management.storage.bookkeeper.BookKeeperPackagesStorageProvider
          packagesReplicas: "1"
          brokerDeleteInactiveTopicsEnabled: "false"
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      proxy:
        replicas: 1
        kafka:
          enabled: true
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
        webSocket:
          resources:
            requests:
              cpu: "0.2"
              memory: "128Mi"
          config:
            PULSAR_MEM: "-XX:+ExitOnOutOfMemoryError"
            numHttpServerThreads: "16"
        config:
          PULSAR_MEM: "-XX:+ExitOnOutOfMemoryError"
      autorecovery:
        replicas: 1
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      bastion:
        replicas: 1
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      functionsWorker:
        replicas: 1
        runtime: kubernetes
        config:
          secretsProviderConfiguratorClassName: org.apache.pulsar.functions.secretsproviderconfigurator.KubernetesSecretsProviderConfigurator
          functionAuthProviderClassName: org.apache.pulsar.functions.auth.KubernetesSecretsTokenAuthProvider
          functionRuntimeFactoryConfigs:
            jobNamespace: default
            percentMemoryPadding: 10
            pulsarAdminUrl: https://pulsar-proxy.default.svc.cluster.local:8443
            pulsarDockerImageName: datastax/lunastreaming-all:3.1_4.5
            pulsarRootDir: /pulsar
            pulsarServiceUrl: pulsar+ssl://pulsar-proxy.default.svc.cluster.local:6651
            submittingInsidePod: true
          numFunctionPackageReplicas: 1
          downloadDirectory: "/tmp"
          functionsWorkerEnablePackageManagement: true
          functionInstanceMaxResources:
            disk: 10000000000
            ram: 500000000
            cpu: 0.3
        resources:
          requests:
            cpu: "0.3"
cert-manager:
  enabled: true
  installCRDs: true
pulsarGrafanaDashboards:
  enabled: false
kube-prometheus-stack:
  enabled: false
  grafana:
    adminPassword: grafana1
